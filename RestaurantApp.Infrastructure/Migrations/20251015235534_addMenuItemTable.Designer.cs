// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantApp.Infrastructure.Data;

#nullable disable

namespace RestaurantApp.Infrastructure.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20251015235534_addMenuItemTable")]
    partial class addMenuItemTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantApp.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1096),
                            Description = "Start your meal with delicious small bites and starters.",
                            IsDeleted = false,
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1103),
                            Description = "Hearty and satisfying main dishes for every taste.",
                            IsDeleted = false,
                            Name = "Main Courses"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1106),
                            Description = "Freshly made pasta and wood-fired pizzas.",
                            IsDeleted = false,
                            Name = "Pasta & Pizza"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1109),
                            Description = "Classic sandwiches and juicy burgers served with fries.",
                            IsDeleted = false,
                            Name = "Sandwiches & Burgers"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1111),
                            Description = "Healthy and fresh salad options.",
                            IsDeleted = false,
                            Name = "Salads"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1114),
                            Description = "Delicious seafood dishes cooked with care.",
                            IsDeleted = false,
                            Name = "Seafood"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1116),
                            Description = "Sweet treats to end your meal perfectly.",
                            IsDeleted = false,
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1118),
                            Description = "Refreshing cold and hot drinks.",
                            IsDeleted = false,
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1121),
                            Description = "Tasty meals specially made for kids.",
                            IsDeleted = false,
                            Name = "Kids Menu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 10, 15, 23, 55, 32, 47, DateTimeKind.Utc).AddTicks(1123),
                            Description = "Seasonal and promotional dishes at great prices.",
                            IsDeleted = false,
                            Name = "Special Offers"
                        });
                });

            modelBuilder.Entity("RestaurantApp.Domain.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("RestaurantApp.Domain.Models.MenuItem", b =>
                {
                    b.HasOne("RestaurantApp.Domain.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RestaurantApp.Domain.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
